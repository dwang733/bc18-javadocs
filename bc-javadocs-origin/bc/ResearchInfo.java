/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package bc;

public class ResearchInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ResearchInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ResearchInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

//  protected void finalize() {
//    delete();
//  }
//
//  public synchronized void delete() {
//    if (swigCPtr != 0) {
//      if (swigCMemOwn) {
//        swigCMemOwn = false;
//        bcJNI.delete_ResearchInfo(swigCPtr);
//      }
//      swigCPtr = 0;
//    }
//  }

  /**
   * Construct an initial research state.
   */
  public ResearchInfo() {
    this(bcJNI.new_ResearchInfo(), true);
  }

  /**
   * Returns the current level of the research branch.
   */
  public long getLevel(UnitType branch) {
    return bcJNI.ResearchInfo_getLevel(swigCPtr, this, branch.swigValue());
  }

  /**
   * Returns the research queue, where the front of the queue is at the beginning of the list.
   */
  public VecUnitType queue() {
    long cPtr = bcJNI.ResearchInfo_queue(swigCPtr, this);
    return (cPtr == 0) ? null : new VecUnitType(cPtr, true);
  }

  /**
   * Whether there is a branch in the research queue.
   */
  public boolean hasNextInQueue() {
    return bcJNI.ResearchInfo_hasNextInQueue(swigCPtr, this);
  }

  /**
   * Returns the next branch to be researched, which is the branch at the front of the research queue.
   *
   * <dl>
   *     <dt><span class="strong">Throws:</span></dt>
   *     <dd>NullValue - If there is no branch to be researched.</dd>
   * </dl>
   */
  public UnitType nextInQueue() {
    return UnitType.swigToEnum(bcJNI.ResearchInfo_nextInQueue(swigCPtr, this));
  }

  /**
   * Returns the number of rounds left until the upgrade at the front of the research queue is applied.
   *
   * <dl>
   *     <dt><span class="strong">Throws:</span></dt>
   *     <dd>NullValue - If there is no branch to be researched.</dd>
   * </dl>
   */
  public long roundsLeft() {
    return bcJNI.ResearchInfo_roundsLeft(swigCPtr, this);
  }

  /**
   * Serialize a ResearchInfo to a JSON string
   */
  public String toJson() {
    return bcJNI.ResearchInfo_toJson(swigCPtr, this);
  }

}
