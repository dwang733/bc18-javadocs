/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package bc;

public class OrbitPattern {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OrbitPattern(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OrbitPattern obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

//  protected void finalize() {
//    delete();
//  }
//
//  public synchronized void delete() {
//    if (swigCPtr != 0) {
//      if (swigCMemOwn) {
//        swigCMemOwn = false;
//        bcJNI.delete_OrbitPattern(swigCPtr);
//      }
//      swigCPtr = 0;
//    }
//  }

  /**
   * Construct a new orbit pattern. This pattern is a sinusoidal function y=a*sin(bx)+c,
   * where the x-axis is the round number of takeoff and the the y-axis is the duration of flight to the nearest integer.
   * The amplitude, period, and center are measured in rounds.
   */
  public OrbitPattern(long amplitude, long period, long center) {
    this(bcJNI.new_OrbitPattern(amplitude, period, center), true);
  }

  /**
   * Validates the orbit pattern.
   *
   * <dl>
   *     <dt><span class="strong">Throws:</span></dt>
   *     <dd>InvalidMapObject - If the orbit pattern is invalid.</dd>
   * </dl>
   */
  public void validate() {
    bcJNI.OrbitPattern_validate(swigCPtr, this);
  }

  /**
   * Get the duration of flight if the rocket were to take off from either planet on the given round.
   */
  public long duration(long round) {
    return bcJNI.OrbitPattern_duration(swigCPtr, this, round);
  }

  /**
   * Serialize a OrbitPattern to a JSON string
   */
  public String toJson() {
    return bcJNI.OrbitPattern_toJson(swigCPtr, this);
  }

  public void setAmplitude(long value) {
    bcJNI.OrbitPattern_amplitude_set(swigCPtr, this, value);
  }

  /**
   * Returns the amplitude of the orbit.
   */
  public long getAmplitude() {
    return bcJNI.OrbitPattern_amplitude_get(swigCPtr, this);
  }

  public void setPeriod(long value) {
    bcJNI.OrbitPattern_period_set(swigCPtr, this, value);
  }

  /**
   * Returns the period of the orbit.
   */
  public long getPeriod() {
    return bcJNI.OrbitPattern_period_get(swigCPtr, this);
  }

  public void setCenter(long value) {
    bcJNI.OrbitPattern_center_set(swigCPtr, this, value);
  }

  /**
   * Returns the center of the orbit.
   */
  public long getCenter() {
    return bcJNI.OrbitPattern_center_get(swigCPtr, this);
  }

}
